@page "/login"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization
@using OcenaPracowniczaLys.AuthenticationProvider
@using OcenaPracowniczaLys.Models
@using OcenaPracowniczaLys.Services
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div id="main-container">
    <EditForm Model="@_loginRequest" OnValidSubmit="HandleLogin" FormName="UserLoginForm">
        <label for="login">Login</label>
        <InputText id="login" @bind-Value="_loginRequest.Login"/>

        <label for="password">Hasło</label>
        <InputText id="password" @bind-Value="_loginRequest.Password" type="password"/>

        <span class="status-indicator">@_status</span>

        <button type="submit">Login</button>
    </EditForm>
</div>

@code {

    private AppLoginRequest _loginRequest = new AppLoginRequest();
    private string _status = "";
    private bool _isProcessing = false;

    private async Task HandleLogin()
    {
        if (_isProcessing) return;

        try
        {
            _isProcessing = true;
            var appAuthStateProvider = (AppAuthStateProvider)AuthenticationStateProvider;
            var token = await appAuthStateProvider.Login(_loginRequest);
            NavigationManager.NavigateTo($"/postlogin?token={token}", forceLoad: true);

        }
        catch (Exception ex)
        {
            _status = "Nieprawidłowe dane logowania";
        }
        finally
        {
            _isProcessing = false;
        }
    }
    
    

}