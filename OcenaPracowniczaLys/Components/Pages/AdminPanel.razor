@page "/admin-panel"
@using Blazored.Modal
@using Blazored.Modal.Services
@using Microsoft.AspNetCore.Authorization
@using OcenaPracowniczaLys.Components.Popups
@using OcenaPracowniczaLys.Data
@using OcenaPracowniczaLys.Services
@using OcenaPracowniczaLys.Components.AdminTables
@attribute [Authorize(Roles = "admin")]
@inject IUserService UserService
@inject IDepartmentService DepartmentService
@inject IQuestionService QuestionService


<div class="container min-vh-100 d-flex">
    <div class="row w-100">
        <div class="col-md-12">
            <UserTable Users="@_users"/>
            <DepartmentTable Departments="@_departments"></DepartmentTable>
            <QuestionTable Questions="@_questions"></QuestionTable>
            @* <div class="panel-fragment"> *@
            @*     <div id="user-panel" class="admin-table overflow-auto border border-dark rounded mt-3"> *@
            @*         <table class="table table-striped"> *@
            @*             <thead> *@
            @*             <tr> *@
            @*                 <th scope="col">ID</th> *@
            @*                 <th scope="col">Imię i nazwisko</th> *@
            @*                 <th scope="col">Login</th> *@
            @*                 <th scope="col">Aktywny</th> *@
            @*                 <th scope="col">Dezaktywuj</th> *@
            @*                 <th scope="col">Zmiana hasła</th> *@
            @*             </tr> *@
            @*             </thead> *@
            @*             <tbody> *@
            @*             @foreach (var user in _users) *@
            @*             { *@
            @*                 <tr> *@
            @*                     <th scope="row">@user.UserId</th> *@
            @*                     <td>@user.FullName</td> *@
            @*                     <td>@user.Login</td> *@
            @*                     <td>@user.Enabled</td> *@
            @*                     <td class="align-content-center"> *@
            @*                         <button class="btn btn-danger" @onclick="@(() => ToggleUserEnableStatus(user.UserId))"> *@
            @*                             <i class="bi bi-power"></i> *@
            @*                         </button> *@
            @*                     </td> *@
            @*                     <td class="align-content-center"> *@
            @*                         <button class="btn btn-primary" @onclick="@(() => ShowChangeUserPasswordForm(user.UserId))"> *@
            @*                             <i class="bi bi-key"></i> *@
            @*                         </button> *@
            @*                     </td> *@
            @*                 </tr> *@
            @*             } *@
            @*             </tbody> *@
            @*         </table> *@
            @*     </div> *@
            @*     <button class="btn btn-primary mt-2 mb-2" @onclick="ShowAddUserForm">Dodaj</button> *@
            @* </div> *@
            @* <div class="panel-fragment"> *@
            @*     <div id="user-panel" class="admin-table overflow-auto border border-dark rounded mt-3"> *@
            @*         <table class="table table-striped"> *@
            @*             <thead> *@
            @*             <tr> *@
            @*                 <th scope="col">ID</th> *@
            @*                 <th scope="col">Nazwa działu</th> *@
            @*                 <th scope="col">Kierownik</th> *@
            @*                 <th scope="col">Aktywny</th> *@
            @*                 <th scope="col">Dezaktywuj</th> *@
            @*                 <th scope="col">Zmiana kierownika</th> *@
            @*             </tr> *@
            @*             </thead> *@
            @*             <tbody> *@
            @*             @foreach (var dep in _departments) *@
            @*             { *@
            @*                 <tr> *@
            @*                     <th scope="row">@dep.DepartmentId</th> *@
            @*                     <td>@dep.Name</td> *@
            @*                     <td>@dep.Manager?.FullName</td> *@
            @*                     <td>@dep.Enabled</td> *@
            @*                     <td class="align-content-center"> *@
            @*                         <button class="btn btn-danger" @onclick="@(() => ToggleDepartmentEnableStatus(dep.DepartmentId))"> *@
            @*                             <i class="bi bi-power"></i> *@
            @*                         </button> *@
            @*                     </td> *@
            @*                     <td class="align-content-center"> *@
            @*                         <button class="btn btn-primary" @onclick="@(() => ShowChangeDepartmentForm(dep.DepartmentId))"> *@
            @*                             <i class="bi bi-gear-fill"></i> *@
            @*                         </button> *@
            @*                     </td> *@
            @*                 </tr> *@
            @*             } *@
            @*             </tbody> *@
            @*         </table> *@
            @*     </div> *@
            @*     <button class="btn btn-primary mt-2 mb-2" @onclick="ShowAddUserForm">Dodaj</button> *@
            @* </div> *@
        </div>
    </div>
</div>


@code {
    private List<User> _users = [];
    private List<Department> _departments = [];
    private List<Question> _questions = [];
    [CascadingParameter] public IModalService Modal { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        _users = await UserService.GetAllUsersAsync();
        _departments = await DepartmentService.GetAllDepartmentsAsync();
        _questions = await QuestionService.GetQuestionsAsync();
    }

    void ShowAddUserForm()
    {
        Modal.Show<AddUserPopup>("Dodaj użytkownika");
    }

    void ToggleUserEnableStatus(int userId)
    {
        UserService.ToggleEnableStatusAsync(userId);
    }

    void ShowChangeUserPasswordForm(int userId)
    {
        var parameters = new ModalParameters()
            .Add(nameof(ChangePassowrdPopup.UserId), userId);
        Modal.Show<ChangePassowrdPopup>("Zmień hasło", parameters);
    }

    void ToggleDepartmentEnableStatus(int depId)
    {
        
    }

    void ShowChangeDepartmentForm(int depId)
    {
        
    }

    void ShowAddDepartmentForm()
    {
        
    }
}