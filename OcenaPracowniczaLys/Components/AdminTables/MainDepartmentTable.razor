@using Blazored.Modal
@using Blazored.Modal.Services
@using OcenaPracowniczaLys.Components.Popups
@using OcenaPracowniczaLys.Data
@using OcenaPracowniczaLys.Services
@inject IDepartmentService DepartmentService
@inject IToastService Toast

<div class="panel-fragment">
    <button class="btn btn-primary mt-2 mb-2" @onclick="ShowAddMainDepartmentForm">Dodaj</button>
    <div id="user-panel" class="admin-table overflow-auto border border-dark rounded mt-3">
        <table class="table table-striped table-bordered">
            <thead>
            <tr class="sticky-top my-sticky-top bg-white">
                <th scope="col" class="text-center align-middle">ID</th>
                <th scope="col" class="text-center align-middle">Nazwa działu</th>
                <th scope="col" class="text-center align-middle">Aktywny</th>
                <th scope="col" class="text-center align-middle">Dezaktywuj</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var dep in MainDepartments)
            {
                <tr>
                    <th scope="row">@dep.MainDepartmentId</th>
                    <td>@dep.Name</td>
                    <td>@dep.Enabled</td>
                    <td class="text-center align-middle">
                        <button class="btn btn-danger" @onclick="@(() => ToggleMainDepartmentEnableStatus(dep.MainDepartmentId))">
                            <i class="bi bi-power"></i>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter] public required List<MainDepartment> MainDepartments { get; set; }    
    [CascadingParameter] public IModalService Modal { get; set; }
    
    void ShowAddMainDepartmentForm()
    {
        var options = new ModalOptions { };
        var parameters = new ModalParameters()
            .Add(nameof(AddMainDepartmentPopup.OnPopupSubmit), EventCallback.Factory.Create(this, ReloadData));
        Modal.Show<AddMainDepartmentPopup>("Dodaj dział główny", parameters, options);
    }
    
    async Task ToggleMainDepartmentEnableStatus(int depId)
    {
        OperationResult result =  await DepartmentService.ToggleEnableMainDepartmentAsync(depId);
        if (result.IsSuccess())
            Toast.ShowSuccess(result.Message);
        else
            Toast.ShowError(result.Message);
    }
    
    private async Task ReloadData()
    {
        MainDepartments = await DepartmentService.GetAllMainDepartmentsAsync();
        StateHasChanged(); 
    }
    
}