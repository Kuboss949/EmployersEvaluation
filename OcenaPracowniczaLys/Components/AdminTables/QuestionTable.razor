@using Blazored.Modal
@using Blazored.Modal.Services
@using OcenaPracowniczaLys.Components.Popups
@using OcenaPracowniczaLys.Data
@using OcenaPracowniczaLys.Services
@inject IDepartmentService DepartmentService
@inject IQuestionService QuestionService
@inject IToastService Toast


<div class="panel-fragment">
    <button class="btn btn-primary mt-2 mb-2" @onclick="ShowAddQuestionForm">Dodaj</button>
    <div id="user-panel" class="admin-table overflow-auto border border-dark rounded mt-3">
        <table class="table table-striped table-bordered">
            <thead>
            <tr class="sticky-top my-sticky-top bg-white">
                <th scope="col" class="text-center align-middle">ID</th>
                <th scope="col" class="text-center align-middle">Dział</th>
                <th scope="col" class="text-center align-middle">Priorytet</th>
                <th scope="col" class="text-center align-middle">Pytanie</th>
                <th scope="col" class="text-center align-middle">Aktywny</th>
                <th scope="col" class="text-center align-middle">Dezaktywuj</th>
                <th scope="col" class="text-center align-middle">Zmiana priorytetu</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var q in Questions)
            {
                <tr class = "@((bool)!q.Enabled ? "alert-danger" : "")">
                    <th scope="row">@q.QuestionId</th>
                    <td>@q.MainDepartment.Name</td>
                    <td>@q.Priority</td>
                    <td>@q.QuestionText</td>
                    <td>@q.Enabled</td>
                    <td class="text-center align-middle">
                        <button class="btn btn-danger" @onclick="@(() => ToggleQuestionEnableStatus(q.QuestionId))">
                            <i class="bi bi-power"></i>
                        </button>
                    </td>
                    <td class="text-center align-middle">
                        <button class="btn btn-primary" 
                                @onclick="@(() => ShowChangeQuestionPriorityForm(q.QuestionId))">
                            <i class="bi bi-gear-fill"></i>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter] public required List<Question> Questions { get; set; }
    [CascadingParameter] public IModalService Modal { get; set; }

    void ShowAddQuestionForm()
    {
        var options = new ModalOptions { };
        var parameters = new ModalParameters()
            .Add(nameof(ChangeQuestionPriorityPopup.OnPopupSubmit), EventCallback.Factory.Create(this, ReloadData));
        Modal.Show<AddQuestionPopup>("Dodaj pytanie", parameters, options);
    }

    async Task ToggleQuestionEnableStatus(int questionId)
    {
        OperationResult result =  await QuestionService.ToggleEnabledQuestionAsync(questionId);
        if (result.IsSuccess())
            Toast.ShowSuccess(result.Message);
        else
            Toast.ShowError(result.Message);
    }
    
    void ShowChangeQuestionPriorityForm(int questionId)
    {
        var options = new ModalOptions { };
        var parameters = new ModalParameters()
            .Add(nameof(ChangeQuestionPriorityPopup.QuestionId), questionId)
            .Add(nameof(ChangeQuestionPriorityPopup.OnPopupSubmit), EventCallback.Factory.Create(this, ReloadData));
        Modal.Show<ChangeUserManagerPopup>("Zmień priorytet", parameters, options);
    }
    
    private async Task ReloadData()
    {
        Questions = await QuestionService.GetQuestionsAsync();
        StateHasChanged(); 
    }

}