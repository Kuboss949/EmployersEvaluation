@page "/change-password"
@using System.ComponentModel.DataAnnotations
@using Microsoft.IdentityModel.Tokens
@using OcenaPracowniczaLys.Models
@using OcenaPracowniczaLys.Services
@inject IToastService Toast
@inject IUserService UserService

<EditForm Model="@_newPasswordModel" OnValidSubmit="HandleChangePassword" FormName="UserChangePasswordForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label" for="password">Nowe hasło</label>
        <InputText id="password" class="form-control" @bind-Value="_newPasswordModel.NewPassword" type="password" />
    </div>

    <button class="btn btn-primary mt-3" type="submit">Zmień</button>
</EditForm>

@code {
    // Model do walidacji – możesz użyć atrybutów walidacji z System.ComponentModel.DataAnnotations
    public class ChangePasswordModel
    {
        [Required(ErrorMessage = "Pole jest wymagane")]
        [MinLength(6, ErrorMessage = "Hasło musi mieć co najmniej 6 znaków")]
        public string NewPassword { get; set; } = string.Empty;
    }

    private ChangePasswordModel _newPasswordModel = new ChangePasswordModel();
    

    [Parameter] public int UserId { get; set; }

    private async Task HandleChangePassword()
    {
        if (string.IsNullOrWhiteSpace(_newPasswordModel.NewPassword))
        {
            Toast.ShowError("Ups! Chyba coś zapomniałeś/aś wypełnić. " +
                            "Sprawdź czy wszystkie wymagane pola są zapełnione.");
            return;
        }
        
        OperationResult result = await UserService.ChangePasswordAdminAsync(UserId, _newPasswordModel.NewPassword);

        if (result.IsSuccess())
            Toast.ShowSuccess(result.Message);
        else
            Toast.ShowError(result.Message);
        _newPasswordModel.NewPassword = "";
    }
}
