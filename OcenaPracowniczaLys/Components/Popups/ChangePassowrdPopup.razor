@page "/change-password"
@using System.ComponentModel.DataAnnotations
@using Microsoft.IdentityModel.Tokens
@using OcenaPracowniczaLys.Models
@using OcenaPracowniczaLys.Services
@inject IUserService UserService

<EditForm Model="@_newPasswordModel" OnValidSubmit="HandleChangePassword" FormName="UserChangePasswordForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label" for="password">Nowe hasło</label>
        <InputText id="password" class="form-control" @bind-Value="_newPasswordModel.NewPassword" type="password" />
    </div>

    <button class="btn btn-primary mt-3" type="submit">Zmień</button>
</EditForm>

@if (!string.IsNullOrEmpty(_infoMessage))
{
    <div class="@_infoClass mt-3">
        @_infoMessage
    </div>
}

@code {
    // Model do walidacji – możesz użyć atrybutów walidacji z System.ComponentModel.DataAnnotations
    public class ChangePasswordModel
    {
        [Required(ErrorMessage = "Pole jest wymagane")]
        [MinLength(6, ErrorMessage = "Hasło musi mieć co najmniej 6 znaków")]
        public string NewPassword { get; set; } = string.Empty;
    }

    private ChangePasswordModel _newPasswordModel = new ChangePasswordModel();
    private string _infoMessage = "";
    private string _infoClass = "invisible";

    [Parameter] public int UserId { get; set; }

    private async Task HandleChangePassword()
    {
        if (string.IsNullOrWhiteSpace(_newPasswordModel.NewPassword))
        {
            _infoMessage = "Ups! Chyba coś zapomniałeś/aś wypełnić. Sprawdź czy wszystkie wymagane pola są zapełnione.";
            _infoClass = "alert alert-danger";
            return;
        }
        
        OperationResult result = await UserService.ChangePasswordAdminAsync(UserId, _newPasswordModel.NewPassword);

        _infoClass = result.Status.Equals("Success", StringComparison.OrdinalIgnoreCase)
            ? "alert alert-success" : "alert alert-danger";
        _infoMessage = result.Message;
        _newPasswordModel.NewPassword = "";
    }
}
