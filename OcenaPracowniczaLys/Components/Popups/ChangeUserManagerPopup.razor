@using System.ComponentModel.DataAnnotations
@using Microsoft.IdentityModel.Tokens
@using OcenaPracowniczaLys.Data
@using OcenaPracowniczaLys.Models
@using OcenaPracowniczaLys.Services
@inject IUserService UserService
@inject IToastService Toast


<EditForm Model="@_changeManagerModel" OnValidSubmit="HandleChangeManager" FormName="UserChangeManagerForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label" for="role">Wybierz Kierownika</label>
        <InputSelect id="role" class="form-select" @bind-Value="@_changeManagerModel.ManagerId">
            @if (_users.IsNullOrEmpty())
            {
                <option value="-1">Błąd połączenia z bazą danych</option>
            }
            else
            {
                <option value="-1">Wybierz Kierownika</option>
                @foreach (var u in _users.Where(u=>u.Enabled))
                {
                    <option value="@u.UserId">@u.FullName</option>
                }
            }
        </InputSelect>
    </div>

    <button class="btn btn-primary mt-3" type="submit">Zmień</button>
</EditForm>
@code {
    
    [Parameter] public int UserId { get; set; }
    private ChangeManagerModel _changeManagerModel = new ChangeManagerModel();
    private List<User> _users = [];
    protected override async Task OnInitializedAsync()
    {
        _users = await UserService.GetAllUsersAsync();
    }

    private async Task HandleChangeManager()
    {
        if (_changeManagerModel.ManagerId < 0)
        {
            Toast.ShowError("Ups! Chyba coś zapomniałeś/aś wypełnić. Sprawdź czy wszystkie wymagane pola są zapełnione.");
            return;
        }

        OperationResult result = await UserService.ChangeUserManagerAsync(UserId, _changeManagerModel.ManagerId);

        if (result.IsSuccess())
            Toast.ShowSuccess(result.Message);
        else
            Toast.ShowError(result.Message);
    }

}